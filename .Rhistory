p + stat_function(fun = def_rate_fico)
library(ggplot2)
p = ggplot(data = data.frame(x = 0), mapping = aes(x = x))
def_rate_fico = function(x){(1-1/(1+exp(-.016*(x-550))))}
p + stat_function(fun = def_rate_fico)
p + stat_function(fun = def_rate_fico) +xlim(250,1000)
p + stat_function(fun = def_rate_fico, size = 1) +xlim(250,1000)
p + stat_function(fun = def_rate_fico, size = 1) +
xlim(250,1000) +
theme_minimal()+
ggtitle("Likelihood of Defaulting")
p + stat_function(fun = def_rate_fico, size = 1) +
xlim(250,1000) +
theme(text = element_text(size=18))+
theme_minimal()+
ggtitle("Likelihood of Defaulting")
p + stat_function(fun = def_rate_fico, size = 1) +
xlim(250,1000) +
theme(text = element_text(size=30))+
theme_minimal()+
ggtitle("Likelihood of Defaulting")
p + stat_function(fun = def_rate_fico, size = 1) +
xlim(250,1000) +
theme(text = element_text(size=30))+
theme_minimal()+
ggtitle("Likelihood of Defaulting")
p + stat_function(fun = def_rate_fico, size = 1) +
xlim(250,1000) +
theme(text = element_text(size=80))+
theme_minimal()+
ggtitle("Likelihood of Defaulting")
p = ggplot(data = data.frame(x = 0), mapping = aes(x = x)) +theme(text = element_text(size=0))+
def_rate_fico = function(x){(1-1/(1+exp(-.016*(x-550))))}
p = ggplot(data = data.frame(x = 0), mapping = aes(x = x)) +theme(text = element_text(size=0))
def_rate_fico = function(x){(1-1/(1+exp(-.016*(x-550))))}
p + stat_function(fun = def_rate_fico, size = 1) +
xlim(250,1000) +
theme_minimal()+
ggtitle("Likelihood of Defaulting")
p + stat_function(fun = def_rate_fico, size = 1) +
xlim(250,1000) +
theme(text = element_text(size=20))+
theme_minimal()+
ggtitle("Likelihood of Defaulting")
p + stat_function(fun = def_rate_fico, size = 1) +
xlim(250,1000) +
theme_minimal()+
theme(text = element_text(size=20))+
ggtitle("Likelihood of Defaulting")
ggplot(data = data.frame(x = c(0, 1000)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200)) + ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1200)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200)) + ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200)) + ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200)) +ylab("") +
scale_y_continuous(breaks = NULL)
scale_color_manual(values=c("deepskyblue4", "firebrick2")+
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), color = "red") +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), color = "red") +
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), color = "red") +
scale_color_manual(values=c("deepskyblue4", "firebrick2"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), color = "red")
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), color = "red") +
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), color = "red") +
scale_colour_manual("Lgend title", values = c("red", "blue"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), aes(color = "red")) +
scale_colour_manual("Lgend title", values = c("red", "blue"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), aes(color = "line1")) +
scale_colour_manual("Lgend title", values = c("red", "blue"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200), aes(color = "line1")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), aes(color = "line2")) +
scale_colour_manual("Lgend title", values = c("red", "blue"))+
ylab("") +
scale_y_continuous(breaks = NULL)
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), aes(color = "line2")) +
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200), aes(color = "line1")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), aes(color = "line2")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 580, sd = 200), aes(color = "line3")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 540, sd = 200), aes(color = "line4")) +
scale_color_manual(values=c("deepskyblue4", "firebrick2","lightseagreen","coral"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200), aes(color = "line1")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), aes(color = "line2")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 580, sd = 200), aes(color = "line3")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 540, sd = 200), aes(color = "line4")) +
scale_color_manual(values=c("deepskyblue4", "firebrick2","lightseagreen","coral"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200), aes(color = "group 1")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), aes(color = "group 2")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 580, sd = 200), aes(color = "group 3")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 540, sd = 200), aes(color = "group 4")) +
scale_color_manual(values=c("deepskyblue4", "firebrick2","lightseagreen","coral"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1500)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 800, sd = 200), aes(color = "group 1")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 633, sd = 200), aes(color = "group 2")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 567, sd = 200), aes(color = "group 3")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 500, sd = 200), aes(color = "group 4")) +
scale_color_manual(values=c("deepskyblue4", "firebrick2","lightseagreen","coral"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1500)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 800, sd = 200), aes(color = "group 1")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 633, sd = 200), aes(color = "group 2")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 567, sd = 200), aes(color = "group 3")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 400, sd = 200), aes(color = "group 4")) +
scale_color_manual(values=c("deepskyblue4", "firebrick2","lightseagreen","coral"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1500)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 920, sd = 200), aes(color = "group 1")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 707, sd = 200), aes(color = "group 2")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 493, sd = 200), aes(color = "group 3")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 280, sd = 200), aes(color = "group 4")) +
scale_color_manual(values=c("deepskyblue4", "firebrick2","lightseagreen","coral"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1300)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 660, sd = 200), aes(color = "group 1")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 620, sd = 200), aes(color = "group 2")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 580, sd = 200), aes(color = "group 3")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 540, sd = 200), aes(color = "group 4")) +
scale_color_manual(values=c("deepskyblue4", "firebrick2","lightseagreen","coral"))+
ylab("") +
scale_y_continuous(breaks = NULL)
ggplot(data = data.frame(x = c(0, 1500)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 800, sd = 200), aes(color = "group 1")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 633, sd = 200), aes(color = "group 2")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 567, sd = 200), aes(color = "group 3")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 400, sd = 200), aes(color = "group 4")) +
scale_color_manual(values=c("deepskyblue4", "firebrick2","lightseagreen","coral"))+
ylab("") +
scale_y_continuous(breaks = NULL)
library(ggplot2)
p = ggplot(data = data.frame(x = 0), mapping = aes(x = x))
def_rate_fico = function(x){(1-1/(1+exp(-.16*(x-50))))}
p + stat_function(fun = def_rate_fico, size = 1) +
xlim(0,100) +
theme_minimal()+
theme(text = element_text(size=20))+
ggtitle("Likelihood of Defaulting")
ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 75, sd = 10), aes(color = "group 1")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 60, sd = 10), aes(color = "group 2")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 45, sd = 10), aes(color = "group 3")) +
stat_function(fun = dnorm, n = 101, args = list(mean = 30, sd = 10), aes(color = "group 4")) +
scale_color_manual(values=c("deepskyblue4", "firebrick2","lightseagreen","coral"))+
ylab("") +
scale_y_continuous(breaks = NULL)
n_critical_75 <- qnorm(0.70, mean = 75, sd = 10)
n_critical_60 <- qnorm(0.70, mean = 60, sd = 10)
n_critical_45 <- qnorm(0.70, mean = 45, sd = 10)
n_critical_30 <- qnorm(0.70, mean = 30, sd = 10)
ggplot(NULL, aes(x = c(0, 100))) +
# T-distribution with 5 degrees of freedom
#   Non-significant area
stat_function(fun = dnorm,
geom = "line",
xlim = c(0, 100),
args = list(
mean = 75, sd = 10
)) +
#   Significant area
stat_function(fun = dnorm,
geom = "area",
xlim = c(n_critical_75, 100),
alpha = .3,
fill = "deepskyblue4",
args = list(
mean = 75, sd = 10
)) +
# t-distribution with 25 degrees of freedom
#   Non-significant area
stat_function(fun = dnorm,
geom = "line",
xlim = c(0, 100),
args = list(
mean = 60, sd = 10
)) +
#   Significant area
stat_function(fun = dnorm,
geom = "area",
xlim = c(n_critical_60, 100),
alpha = .3,
fill = "firebrick2",
args = list(
mean = 60, sd = 10
)) +
stat_function(fun = dnorm,
geom = "line",
xlim = c(0, 100),
args = list(
mean = 45, sd = 10
)) +
#   Significant area
stat_function(fun = dnorm,
geom = "area",
xlim = c(n_critical_45, 100),
alpha = .3,
fill = "lightseagreen",
args = list(
mean = 45, sd = 10
)) +
stat_function(fun = dnorm,
geom = "line",
xlim = c(0, 100),
args = list(
mean = 30, sd = 10
)) +
#   Significant area
stat_function(fun = dnorm,
geom = "area",
xlim = c(n_critical_30, 100),
alpha = .3,
fill = "coral",
args = list(
mean = 30, sd = 10
)) +
geom_vline(xintercept = n_critical_75, linetype="dotted")+
geom_vline(xintercept = n_critical_60, linetype="dotted")+
geom_vline(xintercept = n_critical_45, linetype="dotted")+
geom_vline(xintercept = n_critical_30, linetype="dotted")+
theme_minimal()+
theme(text = element_text(size=20))+
xlab("Fitness")+
ylab("Probability Density")+
xlim(0, 100)
install.packages("rchess")
chss <- Chess$new()
#install.packages("rchess")
library(rchess)
chss <- Chess$new()
chss$load_pgn("./Lichess 2013-01.pgn")
setwd("~/Documents/Projects/Chess")
chss$load_pgn("Lichess 2013-01.pgn")
pgn <- system.file("Lichess 2013-01.pgn", package = "rchess")
pgn <- readLines(pgn, warn = FALSE)
pgn <- paste(pgn, collapse = "\n")
cat(pgn)
pgn <- readLines(pgn, warn = FALSE)
pgn
pgn <- system.file("example.pgn", package = "rchess")
pgn
chss$load_pgn("example.pgn")
pgn <- system.file("example.pgn", package = "rchess")
pgn <- readLines(pgn, warn = FALSE)
pgn <- system.file("example.pgn", package = "rchess")
chss$load_pgn(pgn)
pgn <- system.file("./example.pgn", package = "rchess")
pgn <- readLines(pgn, warn = FALSE)
pgn <- system.file(".\example.pgn", package = "rchess")
pgn <- system.file("./example.pgn", package = "rchess")
tf <- tempfile(fileext = ".zip")
td <- tempdir()
download.file("https://www.pgnmentor.com/players/Adams.zip",  tf)
fil <- unzip(tf, exdir = td)
download.file("https://www.pgnmentor.com/players/Adams.zip",  tf)
adams <- read_pgn(example.pgn)
#install.packages("rchess")
install.packages("pigeon")
#install.packages("rchess")
devtools::install_github("hrbrmstr/pigeon")
#install.packages("rchess")
#devtools::install_github("hrbrmstr/pigeon")
library(pigeon)
#install.packages("rchess")
#devtools::install_github("hrbrmstr/pigeon")
library(pigeon)
#install.packages("rchess")
#devtools::install_github("hrbrmstr/pigeon")
install.packages("rlang", dependencies = TRUE)
install.packages("rlang", dependencies = TRUE)
install.packages("rlang", dependencies = TRUE)
install.packages("rlang", dependencies = TRUE)
install.packages("rlang", dependencies = TRUE)
install.packages("rlang", dependencies = TRUE)
install.packages("rlang", dependencies = TRUE)
library(pigeon)
library(rchess)
fide <- read_pgn(system.file("extdata", "r7.pgn", package="pigeon"))
fide
fide <- read_pgn(system.file("extdata", "example.pgn", package="pigeon"))
fide <- read_pgn(system.file("example.pgn", package="pigeon"))
setwd("~/Documents/Projects/Chess")
fide <- read_pgn(system.file("example.pgn", package="pigeon"))
fide <- read_pgn(system.file("./example.pgn", package="pigeon"))
fide <- read_pgn(system.file("extdata", "r7.pgn", package="pigeon"))
fide
pgn <- read_pgn(system.file("extdata", "r7.pgn", package="pigeon"))
pgn
cat(pgn)
cat(pgn[1])
pgn$Moves
glimpse(pgn)
glimpse(pgn)
library(dplyr)
library(tidyverse)
pgn <- read_pgn(system.file("extdata", "r7.pgn", package="pigeon"))
pgn$Moves
glimpse(pgn)
glimpse(pgn[1])
system.file()
system.file("example.pgn")
system.file("extdata")
system.file("extdata", "r7.pgn", package="pigeon")
system.file( "r7.pgn", package="pigeon")
system.file("r7.pgn", package="pigeon")
system.file("/Users/choldawa/Documents/Projects/Chess/example.pgn", package="pigeon")
read_pgn("/Users/choldawa/Documents/Projects/Chess/example.pgn")
pgn <- system.file("extdata/pgn/kasparov_vs_topalov.pgn", package = "rchess")
pgn$Moves
pgn
pgn <- readLines(pgn, warn = FALSE)
pgn <- paste(pgn, collapse = "\n")
cat(pgn)
pgn <- system.file("example.pgn", package = "rchess")
extdata/pgn/kasparov_vs_topalov
pgn <- system.file("extdata/pgn/kasparov_vs_topalov.pgn", package = "rchess")
pgn <- readLines(pgn, warn = FALSE)
pgn <- paste(pgn, collapse = "\n")
cat(pgn)
pgn[1]
View(pgn)
cat(pgn)
pgn[2]
pgn[,2]
pgn
pgn <- "1. e4 e5 2. Nf3 Nc6 3. Bb5 a6
4. Ba4 Nf6 5. O-O Be7 6. Re1 b5 7. Bb3 d6
8. c3 O-O 9. h3 Nb8  10. d4 Nbd7
11. c4 c6 12. cxb5 axb5 13. Nc3 Bb7
14. Bg5 b4 15. Nb1 h6 16. Bh4 c5 17. dxe5
Nxe4 18. Bxe7 Qxe7 19. exd6 Qf6 20. Nbd2 Nxd6 21. Nc4 Nxc4"
chss <- Chess$new()
chss$load_pgn(pgn)
plot(pgn)
plot(chss)
pgn <- "1. e4 e5 2. Nf3 Nc6 3. Bb5 a6
4. Ba4 Nf6 5. O-O Be7 6. Re1 b5 7. Bb3 d6
8. c3 O-O 9. h3 Nb8  10. d4 Nbd7
11. c4 c6 12. cxb5 axb5 13. Nc3 Bb7
14. Bg5 b4 15. Nb1 h6 16. Bh4 c5 17. dxe5
Nxe4 18. Bxe7 Qxe7 19. exd6 Qf6 20. Nbd2 Nxd6"
chss <- Chess$new()
chss$load_pgn(pgn)
plot(chss)
chss$moves()
chss$moves()
pgn <- "1. e4 e5 2. Nf3 Nc6 3. Bb5 a6
4. Ba4 Nf6 5. O-O Be7 6. Re1 b5 7. Bb3 d6
8. c3 O-O 9. h3 Nb8  10. d4 Nbd7
11. c4 c6 12. cxb5 axb5 13. Nc3 Bb7
14. Bg5 b4 15. Nb1 h6 16. Bh4 c5 17. dxe5
Nxe4 18. Bxe7 Qxe7 19. exd6 Qf6 20. Nbd2 Nxd6"
chss <- Chess$new()
chss$load_pgn(pgn)
plot(chss)
chss$moves()
pgn <- "1. e4 e5 2. Nf3 Nc6 3. Bb5 a6
4. Ba4 Nf6 5. O-O Be7 6. Re1 b5 7. Bb3 d6
8. c3 O-O 9. h3 Nb8  10. d4 Nbd7
11. c4 c6 12. cxb5 axb5 13. Nc3 Bb7
14. Bg5 b4 15. Nb1 h6 16. Bh4 c5 17. dxe5
Nxe4 18. Bxe7 Qxe7 19. exd6 Qf6 20. Nbd2 Nxd6 21. Nc4"
chss <- Chess$new()
chss$load_pgn(pgn)
plot(chss)
chss$moves()
pgn <- "1. e4 e5 2. Nf3 Nc6 3. Bb5 a6
4. Ba4 Nf6 5. O-O Be7 6. Re1 b5 7. Bb3 d6
8. c3 O-O 9. h3 Nb8  10. d4 Nbd7
11. c4 c6 12. cxb5 axb5 13. Nc3 Bb7
14. Bg5 b4 15. Nb1 h6 16. Bh4 c5 17. dxe5
Nxe4 18. Bxe7 Qxe7 19. exd6 Qf6 20. Nbd2 Nxd6 21. Nc4 Nxc4"
chss <- Chess$new()
chss$load_pgn(pgn)
plot(chss)
chss$moves()
